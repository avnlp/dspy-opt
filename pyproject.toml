[build-system]
requires = ["uv_build>=0.7.20,<0.8.0"]
build-backend = "uv_build"

[project]
name = "dspy_opt"
version = "0.1.0"
description = 'Optimize Pipelines using DSPy'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Ashwin Mathur", email = "" },
  { name = "Varun Mathur", email = "" },
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python",
]
dependencies = [
  "dspy",
  "datasets",
  "weaviate",
  "deepeval",
  "langchain",
  "langchain-huggingface",
  "langchain-weaviate",
  "sentence-transformers",
]

[dependency-groups]
dev = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]

[project.urls]
Documentation = "https://github.com/avnlp/dspy-opt#readme"
Issues = "https://github.com/avnlp/dspy-opt/issues"
Source = "https://github.com/avnlp/dspy-opt"

[tool.coverage.run]
source = ["dspy_opt"]
branch = true
parallel = true

[tool.coverage.report]
omit = ["*/tests/*", "*/__init__.py"]
show_missing = true
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "D",
  "D401",
  "DTZ",
  "E",
  "EM",
  "F",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow unused function arguments, for pytest fixtures
  "ARG001",
  "ARG002",
  "ARG003",
  "ARG005",
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Allow assert statements
  "S101", 
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR2004",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  # Allow print statements
  "T201",
  # Ignore missing module docstrings
  "D100",
  "D103",
  "D104",
  # Ignore Line too long
  "E501",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]
extend-select = ["I"]


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["prp"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-markers"
markers = ["integration: integration tests"]
log_cli = true

[tool.black]
line-length = 120

[[tool.mypy.overrides]]
module = ["prp.*", "pytest.*", "numpy.*"]
ignore_missing_imports = true
